let restaurants,neighborhoods,cuisines;var map,markers=[];console.log("main.js"),window.addEventListener("load",e=>{console.log("load"),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{console.log("fetchNeighborhoods"),DBHelper.fetchNeighborhoods((e,s)=>{e?console.error(e):(self.neighborhoods=s,fillNeighborhoodsHTML())})});let selectedRestaurants={};const cSelect=document.getElementById("cuisines-select"),nSelect=document.getElementById("neighborhoods-select");updateRestaurants=(()=>{console.log("uppppp");const e=cSelect.selectedIndex,s=nSelect.selectedIndex,t=cSelect[e].value,l=nSelect[s].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(t,l,(e,s)=>{e?console.error(e):(resetRestaurants(s),fillRestaurantsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const s=document.getElementById("neighborhoods-select");e.forEach(e=>{const t=document.createElement("option");t.innerHTML=e,t.value=e,s.append(t)})}),initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1})}),fetchCuisines=(()=>{updateRestaurants(),DBHelper.fetchCuisines((e,s)=>{e?console.error(e):(self.cuisines=s,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const s=document.getElementById("cuisines-select");e.forEach(e=>{const t=document.createElement("option");t.innerHTML=e,t.value=e,s.append(t)})});var i,coll=document.getElementsByClassName("collapsible");for(i=0;i<coll.length;i++)coll[i].addEventListener("click",function(){this.classList.toggle("active");var e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"});var elementCollapsable=document.getElementById("collapsible");elementCollapsable.addEventListener("click",()=>{initMap(),addMarkersToMap()}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const s=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(s,"click",()=>{window.location.href=s.url}),self.markers.push(s)})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const s=document.getElementById("restaurants-list");e.forEach(e=>{s.append(createRestaurantHTML(e))}),addMarkersToMap()});