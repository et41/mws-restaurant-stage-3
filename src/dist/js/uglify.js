initIDB=(()=>("indexedDB"in window||console.log("This browser doesnt support idb"),idb.open("restaurant-app",3,function(e){switch(e.oldVersion){case 0:console.log("Creating the restaurants object store"),e.createObjectStore("restaurants",{keyPath:"id"});case 1:console.log("Creating the reviews object store"),e.createObjectStore("reviews",{keyPath:"id"});case 2:console.log("Creating restaurant id index"),e.transaction.objectStore("reviews").createIndex("restaurant_id","restaurant_id");case 3:console.log("Creating the reviews object store"),e.createObjectStore("reviews_offline",{keyPath:"id"})}})));let restaurants,neighborhoods,cuisines,res={};class DBHelper{static fetchRestaurants(e){initIDB().then(function(t){t&&t.transaction("restaurants","readwrite").objectStore("restaurants").getAll().then(s=>{if(s.length>0){res.restaurants=s;const t=res.restaurants;e(null,t)}else fetch("http://localhost:1337/restaurants").then(e=>e.json()).then(s=>{res.restaurants=s;const a=res.restaurants;var n=t.transaction("restaurants","readwrite").objectStore("restaurants");a.forEach(e=>{n.put(e)}),n.getAll().then(t=>{e(null,a)})}).catch(t=>{e(t,null)})})})}static fetchReviews(e,t){console.log("fetch Reviews",e),initIDB().then(s=>{if(!s)return;let a=Number(e);s.transaction("reviews","readwrite").objectStore("reviews").index("restaurant_id").getAll(a).then(a=>{if(console.log("items",a),!(a.length>0))return fetch(`http://localhost:1337/reviews/?restaurant_id=${e}`).then(e=>e.json()).then(e=>{console.log("response",e),console.log("aftr response",e);var a=s.transaction("reviews","readwrite").objectStore("reviews");e.forEach(e=>{e.restaurant_id=Number(e.restaurant_id),a.put(e)}),self.restaurant.reviews=e,t(null,self.restaurant.reviews)});a.restaurant_id=Number(a.restaurant_id),self.restaurant.reviews=a,t(null,self.restaurant.reviews)})})}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((s,a)=>{if(s)t(s,null);else{const s=a.find(t=>t.id==e);s?t(null,s):t("Restaurant does not exist",null)}})}static controlFav(e){return fetch(`http://localhost:1337/restaurants/${e}/`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>(console.log("response status:",e),e.json())).then(e=>(console.log("response status:",e.is_favorite),e.is_favorite))}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((s,a)=>{if(s)t(s,null);else{const s=a.filter(t=>t.cuisine_type==e);t(null,s)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((s,a)=>{if(s)t(s,null);else{const s=a.filter(t=>t.neighborhood==e);t(null,s)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,s){DBHelper.fetchRestaurants((a,n)=>{if(a)s(a,null);else{let a=n;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),s(null,a)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,s)=>{if(t)e(t,null);else{const t=s.map((e,t)=>s[t].neighborhood),a=t.filter((e,s)=>t.indexOf(e)==s);e(null,a)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,s)=>{if(t)e(t,null);else{const t=s.map((e,t)=>s[t].cuisine_type),a=t.filter((e,s)=>t.indexOf(e)==s);e(null,a)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}}var map;"serviceWorker"in navigator||console.log("Service worker not supported"),navigator.serviceWorker.register("/sw.js").then(function(e){}).catch(function(e){console.log("Registration failed:",e)});var markers=[];console.log("main.js"),window.addEventListener("load",e=>{console.log("load"),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{console.log("fetchNeighborhoods"),DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1})}),fetchCuisines=(()=>{updateRestaurants(),DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})});let selectedRestaurants={};updateRestaurants=(()=>{console.log("updateRestaurants");const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,r=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,r,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})});var i,coll=document.getElementsByClassName("collapsible");for(i=0;i<coll.length;i++)coll[i].addEventListener("click",function(){this.classList.toggle("active");var e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"});var elementCollapsable=document.getElementById("collapsible");let idIntersectingElement;elementCollapsable.addEventListener("click",()=>{initMap(),addMarkersToMap()}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()});var io=new IntersectionObserver(e=>{console.log("iointersect"),e.forEach(e=>{if(e.isIntersecting){let t=e.target.childNodes[0].id,s=t.replace(/^\D+/g,"");s=Number(s),idIntersectingElement=s,console.log("load image from intersect:",res.restaurants[s-1]),loadImage(res.restaurants[s-1],t),io.unobserve(e.target)}})});changeFavRestaurantBorder=((e,t)=>{let s=document.getElementById("restaurant"+t);console.log("favRestaurant,is_fav,listNumber",s,e,t),e?(console.log("fav",s),s.style.borderColor="#c22c2c"):(console.log("else",s),s.style.borderColor="#ccc")}),getRestaurantfavStatus=(e=>fetch(`http://localhost:1337/restaurants/${e}`).then(e=>e.json()).then(e=>e.is_favorite)),createRestaurantHTML=((e,t)=>{const s=document.createElement("li");s.id="restaurant"+e.id,io.observe(s);let a=document.createElement("img");a.className="restaurant-img",a.id="image"+e.id,s.append(a);const n=document.createElement("h2");n.innerHTML=e.name,s.append(n);const r=document.createElement("p");r.innerHTML=e.neighborhood,s.append(r);const o=document.createElement("p");o.innerHTML=e.address,s.append(o);const l=document.createElement("a");l.innerHTML="View Details",l.href=DBHelper.urlForRestaurant(e),s.append(l);const i=document.createElement("button");return i.id="fav"+e.id,i.innerHTML=" â˜†",getRestaurantfavStatus(e.id).then(e=>{e?(s.style.borderColor="#c22c2c",i.className="checked"):(s.style.borderColor="#ccc",i.className="")}),s.append(i),loadImage=((e,t)=>{(a=document.getElementById(t)).src=DBHelper.imageUrlForRestaurant(e),a.srcset=`images/${e.id}-300small_low.jpg 480w,images/${e.id}-600medium.jpg 600w`,a.sizes="(max-width: 600px) 20vw,(min-width: 601px) 50vw",a.alt="showing restaurant is "+e.name+" and cuisine type is "+e.cuisine_type}),s}),updateSelectedRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,r=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,r,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML(),afterUpdate(t))})}),afterUpdate=(e=>{console.log("afterUpdate",e),e.forEach(e=>{t.is_favorite?(li.style.borderColor="#c22c2c",fav.className="checked"):(li.style.borderColor="#ccc",fav.className="");let t=e;image=document.getElementById("image"+e.id),image.src=DBHelper.imageUrlForRestaurant(t),image.alt="showing restaurant is "+t.name+" and cuisine type is "+t.cuisine_type,image.srcset=`images/${t.id}-400small.jpg 480w,images/${t.id}-600medium.jpg 600w`,image.sizes="(max-width: 600px) 60vw,(min-width: 601px) 50vw"})}),addFavorite=(e=>{fetch(`http://localhost:1337/restaurants/${e}/`,{method:"PUT",body:JSON.stringify({is_favorite:!0}),headers:{"Content-Type":"application/json"}}).then(e=>(console.log("response status:",e),e.json())).then(e=>{console.log("response status:",e.is_favorite)})}),removeFavorite=(e=>{fetch(`http://localhost:1337/restaurants/${e}/`,{method:"PUT",body:JSON.stringify({is_favorite:!1}),headers:{"Content-Type":"application/json"}}).then(e=>(console.log("response status:",e),e.json())).then(e=>{console.log("response status:",e.is_favorite)})});let restaurantsList=document.getElementById("restaurants-list");restaurantsList.addEventListener("click",e=>{console.log("click",e);let t=e.target.id,s=e.target,a=t.replace(/^\D+/g,"");t.includes("fav")&&!s.classList.contains("checked")?(console.log("clicked",e),addFavorite(a),s.classList.toggle("checked"),changeFavRestaurantBorder(!0,a)):t.includes("fav")&&s.classList.contains("checked")&&(removeFavorite(a),s.classList.toggle("checked"),changeFavRestaurantBorder(!1,a))});